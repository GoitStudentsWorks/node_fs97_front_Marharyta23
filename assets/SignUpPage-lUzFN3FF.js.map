{"version":3,"file":"SignUpPage-lUzFN3FF.js","sources":["../../src/components/SignUpForm/SignUpForm.jsx","../../src/pages/SignUpPage/SignUpPage.jsx"],"sourcesContent":["import { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { register } from \"../../redux/auth/operations\";\nimport { selectIsLoggedIn } from \"../../redux/auth/selectors\";\n\nimport { errorToast } from \"../../helpers/toast\";\n\nimport icons from \"../../img/icons.svg\";\n\nimport css from \"./SignUpForm.module.css\";\n\nconst schema = yup.object().shape({\n  email: yup.string().email(\"Invalid email\").required(\"Email is required\"),\n  password: yup\n    .string()\n    .min(6, \"Password must be at least 6 characters\")\n    .required(\"Password is required\"),\n  repeatPassword: yup\n    .string()\n    .oneOf([yup.ref(\"password\"), null], \"Passwords must match\")\n    .required(\"Repeat Password is required\"),\n});\n\nconst SignUpForm = () => {\n  const dispatch = useDispatch();\n  const isLoggedIn = useSelector(selectIsLoggedIn);\n  const navigate = useNavigate();\n\n  // Використання react-hook-form для управління формою\n  const {\n    register: registerInput,\n    handleSubmit,\n    formState: { errors },\n  } = useForm({\n    resolver: yupResolver(schema),\n  });\n\n  // Показ та приховування паролю\n  const [showPassword, setShowPassword] = useState(false);\n  const togglePasswordVisibility = () => {\n    setShowPassword(!showPassword);\n  };\n\n  // Показ та приховування повторного паролю\n  const [showRepeatPassword, setShowRepeatPassword] = useState(false);\n  const toggleRepeatPasswordVisibility = () => {\n    setShowRepeatPassword(!showRepeatPassword);\n  };\n\n  // Обробник подання форми\n  const onSubmit = (data) => {\n    if (data.password !== data.repeatPassword) {\n      return;\n    }\n    dispatch(\n      register({\n        email: data.email,\n        password: data.password,\n      })\n    )\n      .unwrap()\n      .then((response) => {\n        navigate(\"/tracker\");\n      })\n      .catch((error) => {\n        errorToast(`${error}`); // Показуємо notification про помилку\n      });\n  };\n\n  if (isLoggedIn) {\n    navigate(\"/tracker\");\n  }\n\n  return (\n    <div className={css.signUpForm}>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <h2 className={css.signUpFormHeader}>Sign Up</h2>\n\n        <div>\n          <label className={css.signUpFormLabel}>Email</label>\n          <input\n            className={`${css.signUpFormInput}\n            ${errors.email ? `${css.errorPlaceholder} ${css.errorInput}` : \"\"}`}\n            type=\"email\"\n            placeholder={errors.email ? \"Invalid email\" : \"Enter your email\"}\n            {...registerInput(\"email\")}\n          />\n          {errors.email && (\n            <p className={css.errorMessage}>{errors.email.message}</p>\n          )}\n        </div>\n        <div>\n          <label className={css.signUpFormLabel}>Password</label>\n          <div style={{ position: \"relative\" }}>\n            <input\n              className={`${css.signUpFormInput} ${\n                errors.password\n                  ? `${css.errorPlaceholder} ${css.errorInput}`\n                  : \"\"\n              }`}\n              type={showPassword ? \"text\" : \"password\"}\n              placeholder={\n                errors.password ? \"Invalid password\" : \"Enter your password\"\n              }\n              {...registerInput(\"password\")}\n            />\n            <svg\n              onClick={togglePasswordVisibility}\n              className={css.passwordToggleIcon}\n              width=\"18\"\n              height=\"18\"\n              style={{\n                position: \"absolute\",\n                right: 10,\n                top: \"50%\",\n                transform: \"translateY(-50%)\",\n                cursor: \"pointer\",\n                fill: \"none\",\n                stroke: \"currentColor\",\n              }}\n            >\n              <use\n                href={`${icons}#icon-${showPassword ? \"eye\" : \"eye-off\"}`}\n              ></use>\n            </svg>\n          </div>\n\n          {errors.password && (\n            <p className={css.errorMessage}>{errors.password.message}</p>\n          )}\n        </div>\n        <div>\n          <label className={css.signUpFormLabel}>Repeat Password</label>\n          <div style={{ position: \"relative\" }}>\n            <input\n              className={`${css.signUpFormInput} ${\n                errors.repeatPassword\n                  ? `${css.errorPlaceholder} ${css.errorInput}`\n                  : \"\"\n              }`}\n              type={showRepeatPassword ? \"text\" : \"password\"}\n              placeholder={\n                errors.repeatPassword\n                  ? \"Passwords do not match\"\n                  : \"Repeat password\"\n              }\n              {...registerInput(\"repeatPassword\")}\n            />\n            <svg\n              onClick={toggleRepeatPasswordVisibility}\n              className={css.passwordToggleIcon}\n              width=\"18\"\n              height=\"18\"\n              style={{\n                position: \"absolute\",\n                right: 10,\n                top: \"50%\",\n                transform: \"translateY(-50%)\",\n                cursor: \"pointer\",\n                fill: \"none\",\n                stroke: \"currentColor\",\n              }}\n            >\n              <use\n                href={`${icons}#icon-${showRepeatPassword ? \"eye\" : \"eye-off\"}`}\n              ></use>\n            </svg>\n          </div>\n          {errors.repeatPassword && (\n            <p className={css.errorMessage}>{errors.repeatPassword.message}</p>\n          )}\n        </div>\n        <button className={css.signUpFormBtn} type=\"submit\">\n          Sign Up\n        </button>\n        <p className={css.signUpPageText}>\n          Already have an account?\n          <Link to=\"/signin\" className={css.signInPageLink}>\n            {\" \"}\n            Sign In\n          </Link>\n        </p>\n      </form>\n    </div>\n  );\n};\n\nexport default SignUpForm;\n","import { useState, useEffect } from \"react\";\n\nimport Logo from \"../../components/Logo/Logo\";\nimport SignUpForm from \"../../components/SignUpForm/SignUpForm\";\nimport DocumentTitle from \"../../components/DocumentTitle/DocumentTitle\";\nimport AdvantagesSection from \"../../components/AdvantagesSection/AdvantagesSection\";\nimport { Toaster } from \"react-hot-toast\";\n\nimport { selectIsLoading } from \"../../redux/auth/selectors\";\nimport { useSelector } from \"react-redux\";\n\nimport Loader from \"../../components/Loader/Loader\";\n\nimport css from \"./SignUpPage.module.css\";\n\nexport default function SignUpPage() {\n  const [isDesktop, setIsDesktop] = useState(window.innerWidth >= 1440);\n\n  useEffect(() => {\n    const handleResize = () => {\n      setIsDesktop(window.innerWidth >= 1440);\n    };\n\n    window.addEventListener(\"resize\", handleResize);\n\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n\n  const loading = useSelector(selectIsLoading);\n\n  return (\n    <div className={css.SignUpPageWrapper}>\n      {loading && <Loader />}\n      <DocumentTitle>Sign Up</DocumentTitle>\n      <div className={css.SignUpPageSection}>\n        <Logo />\n        <SignUpForm />\n      </div>\n      {isDesktop && <AdvantagesSection />}\n      <Toaster />\n    </div>\n  );\n}\n"],"names":["schema","yup.object","yup.string","yup.ref","SignUpForm","dispatch","useDispatch","isLoggedIn","useSelector","selectIsLoggedIn","navigate","useNavigate","registerInput","handleSubmit","errors","useForm","yupResolver","showPassword","setShowPassword","useState","togglePasswordVisibility","showRepeatPassword","setShowRepeatPassword","toggleRepeatPasswordVisibility","onSubmit","data","register","response","error","errorToast","jsx","css","icons","jsxs","Link","SignUpForm$1","SignUpPage","isDesktop","setIsDesktop","useEffect","handleResize","loading","selectIsLoading","Loader","DocumentTitle","Logo","AdvantagesSection","Toaster"],"mappings":"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"}